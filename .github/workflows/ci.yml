name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]
jobs:
  build:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    
    steps:
      - uses: actions/checkout@v2
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - run: npm ci
      - run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage

      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Coverage
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: build-coverage
          path: build
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SEC }}
          persist-credentials: false  
      - run: npm install -g surge
      - name: Deploy to staging
        if: github.event_name == 'push'&& github.ref == 'refs/heads/develop'
        run: surge --project ./dist --domain crazy-mind-action.surge.sh
      - name: Deploy to production
        if: github.event_name == 'push'&& github.ref == 'refs/heads/main'
        run: surge --project ./dist --domain bright-crayon-action.surge.sh
      - name: Upload Coverage to Codecov
        if: github.event_name == 'push'&& github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v5
        run: npx-codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
